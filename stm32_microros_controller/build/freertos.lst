ARM GAS  /tmp/ccRPdVgG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 4572726F 		.ascii	"Error on default allocators (line %d)\012\000"
  20      72206F6E 
  20      20646566 
  20      61756C74 
  20      20616C6C 
  21 0027 00       		.align	2
  22              	.LC1:
  23 0028 00       		.ascii	"\000"
  24 0029 000000   		.align	2
  25              	.LC2:
  26 002c 63756265 		.ascii	"cubemx_node\000"
  26      6D785F6E 
  26      6F646500 
  27              		.align	2
  28              	.LC3:
  29 0038 63756265 		.ascii	"cubemx_publisher\000"
  29      6D785F70 
  29      75626C69 
  29      73686572 
  29      00
  30 0049 000000   		.align	2
  31              	.LC4:
  32 004c 4572726F 		.ascii	"Error publishing (line %d)\012\000"
  32      72207075 
  32      626C6973 
  32      68696E67 
  32      20286C69 
  33              		.section	.text.StartDefaultTask,"ax",%progbits
  34              		.align	1
  35              		.global	StartDefaultTask
  36              		.arch armv7e-m
  37              		.syntax unified
  38              		.thumb
  39              		.thumb_func
  40              		.fpu fpv4-sp-d16
  42              	StartDefaultTask:
  43              	.LVL0:
  44              	.LFB143:
ARM GAS  /tmp/ccRPdVgG.s 			page 2


  45              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include <rcl/rcl.h>
  29:Core/Src/freertos.c **** #include <rcl/error_handling.h>
  30:Core/Src/freertos.c **** #include <rclc/rclc.h>
  31:Core/Src/freertos.c **** #include <rclc/executor.h>
  32:Core/Src/freertos.c **** #include <uxr/client/transport.h>
  33:Core/Src/freertos.c **** #include <rmw_microxrcedds_c/config.h>
  34:Core/Src/freertos.c **** #include <rmw_microros/rmw_microros.h>
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** #include <std_msgs/msg/int32.h>
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** #include <stdbool.h>
  39:Core/Src/freertos.c **** #include "usart.h"
  40:Core/Src/freertos.c **** /* USER CODE END Includes */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  43:Core/Src/freertos.c **** typedef StaticTask_t osStaticThreadDef_t;
  44:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* USER CODE END PTD */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  49:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* USER CODE END PD */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END PM */
ARM GAS  /tmp/ccRPdVgG.s 			page 3


  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  59:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** /* USER CODE END Variables */
  62:Core/Src/freertos.c **** /* Definitions for defaultTask */
  63:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  64:Core/Src/freertos.c **** uint32_t defaultTaskBuffer[ 3000 ];
  65:Core/Src/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
  66:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  67:Core/Src/freertos.c ****   .name = "defaultTask",
  68:Core/Src/freertos.c ****   .cb_mem = &defaultTaskControlBlock,
  69:Core/Src/freertos.c ****   .cb_size = sizeof(defaultTaskControlBlock),
  70:Core/Src/freertos.c ****   .stack_mem = &defaultTaskBuffer[0],
  71:Core/Src/freertos.c ****   .stack_size = sizeof(defaultTaskBuffer),
  72:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  73:Core/Src/freertos.c **** };
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c **** bool cubemx_transport_open(struct uxrCustomTransport * transport);
  79:Core/Src/freertos.c **** bool cubemx_transport_close(struct uxrCustomTransport * transport);
  80:Core/Src/freertos.c **** size_t cubemx_transport_write(struct uxrCustomTransport* transport, const uint8_t * buf, size_t len
  81:Core/Src/freertos.c **** size_t cubemx_transport_read(struct uxrCustomTransport* transport, uint8_t* buf, size_t len, int ti
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c **** void * microros_allocate(size_t size, void * state);
  84:Core/Src/freertos.c **** void microros_deallocate(void * pointer, void * state);
  85:Core/Src/freertos.c **** void * microros_reallocate(void * pointer, size_t size, void * state);
  86:Core/Src/freertos.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state);
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  89:Core/Src/freertos.c **** 
  90:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
  91:Core/Src/freertos.c **** 
  92:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  93:Core/Src/freertos.c **** 
  94:Core/Src/freertos.c **** /**
  95:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  96:Core/Src/freertos.c ****   * @param  None
  97:Core/Src/freertos.c ****   * @retval None
  98:Core/Src/freertos.c ****   */
  99:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
 100:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE END Init */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 105:Core/Src/freertos.c ****   /* add mutexes, ... */
 106:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 107:Core/Src/freertos.c **** 
 108:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 109:Core/Src/freertos.c ****   /* add semaphores, ... */
 110:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 113:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
ARM GAS  /tmp/ccRPdVgG.s 			page 4


 114:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 117:Core/Src/freertos.c ****   /* add queues, ... */
 118:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 119:Core/Src/freertos.c **** 
 120:Core/Src/freertos.c ****   /* Create the thread(s) */
 121:Core/Src/freertos.c ****   /* creation of defaultTask */
 122:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 123:Core/Src/freertos.c **** 
 124:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 125:Core/Src/freertos.c ****   /* add threads, ... */
 126:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 127:Core/Src/freertos.c **** 
 128:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 129:Core/Src/freertos.c ****   /* add events, ... */
 130:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 131:Core/Src/freertos.c **** 
 132:Core/Src/freertos.c **** }
 133:Core/Src/freertos.c **** 
 134:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 135:Core/Src/freertos.c **** /**
 136:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 137:Core/Src/freertos.c ****   * @param  argument: Not used
 138:Core/Src/freertos.c ****   * @retval None
 139:Core/Src/freertos.c ****   */
 140:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 141:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 142:Core/Src/freertos.c **** {
  46              		.loc 1 142 1 view -0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 136
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		.loc 1 142 1 is_stmt 0 view .LVU1
  51 0000 00B5     		push	{lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 4
  54              		.cfi_offset 14, -4
  55 0002 A5B0     		sub	sp, sp, #148
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 152
 143:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 144:Core/Src/freertos.c ****     /* Infinite loop */
 145:Core/Src/freertos.c ****     // micro-ROS configuration
 146:Core/Src/freertos.c **** 
 147:Core/Src/freertos.c ****     rmw_uros_set_custom_transport(
  58              		.loc 1 147 5 is_stmt 1 view .LVU2
  59 0004 2A4B     		ldr	r3, .L8
  60 0006 0193     		str	r3, [sp, #4]
  61 0008 2A4B     		ldr	r3, .L8+4
  62 000a 0093     		str	r3, [sp]
  63 000c 2A4B     		ldr	r3, .L8+8
  64 000e 2B4A     		ldr	r2, .L8+12
  65 0010 2B49     		ldr	r1, .L8+16
  66 0012 0120     		movs	r0, #1
  67              	.LVL1:
  68              		.loc 1 147 5 is_stmt 0 view .LVU3
ARM GAS  /tmp/ccRPdVgG.s 			page 5


  69 0014 FFF7FEFF 		bl	rmw_uros_set_custom_transport
  70              	.LVL2:
 148:Core/Src/freertos.c ****       true,
 149:Core/Src/freertos.c ****       (void *) &huart3,
 150:Core/Src/freertos.c ****       cubemx_transport_open,
 151:Core/Src/freertos.c ****       cubemx_transport_close,
 152:Core/Src/freertos.c ****       cubemx_transport_write,
 153:Core/Src/freertos.c ****       cubemx_transport_read);
 154:Core/Src/freertos.c **** 
 155:Core/Src/freertos.c ****     rcl_allocator_t freeRTOS_allocator = rcutils_get_zero_initialized_allocator();
  71              		.loc 1 155 5 is_stmt 1 view .LVU4
  72              		.loc 1 155 42 is_stmt 0 view .LVU5
  73 0018 1FA8     		add	r0, sp, #124
  74 001a FFF7FEFF 		bl	rcutils_get_zero_initialized_allocator
  75              	.LVL3:
 156:Core/Src/freertos.c ****     freeRTOS_allocator.allocate = microros_allocate;
  76              		.loc 1 156 5 is_stmt 1 view .LVU6
  77              		.loc 1 156 33 is_stmt 0 view .LVU7
  78 001e 294B     		ldr	r3, .L8+20
  79 0020 1F93     		str	r3, [sp, #124]
 157:Core/Src/freertos.c ****     freeRTOS_allocator.deallocate = microros_deallocate;
  80              		.loc 1 157 5 is_stmt 1 view .LVU8
  81              		.loc 1 157 35 is_stmt 0 view .LVU9
  82 0022 294B     		ldr	r3, .L8+24
  83 0024 2093     		str	r3, [sp, #128]
 158:Core/Src/freertos.c ****     freeRTOS_allocator.reallocate = microros_reallocate;
  84              		.loc 1 158 5 is_stmt 1 view .LVU10
  85              		.loc 1 158 35 is_stmt 0 view .LVU11
  86 0026 294B     		ldr	r3, .L8+28
  87 0028 2193     		str	r3, [sp, #132]
 159:Core/Src/freertos.c ****     freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
  88              		.loc 1 159 5 is_stmt 1 view .LVU12
  89              		.loc 1 159 38 is_stmt 0 view .LVU13
  90 002a 294B     		ldr	r3, .L8+32
  91 002c 2293     		str	r3, [sp, #136]
 160:Core/Src/freertos.c **** 
 161:Core/Src/freertos.c ****     if (!rcutils_set_default_allocator(&freeRTOS_allocator)) {
  92              		.loc 1 161 5 is_stmt 1 view .LVU14
  93              		.loc 1 161 10 is_stmt 0 view .LVU15
  94 002e 1FA8     		add	r0, sp, #124
  95 0030 FFF7FEFF 		bl	rcutils_set_default_allocator
  96              	.LVL4:
  97              		.loc 1 161 8 view .LVU16
  98 0034 28B3     		cbz	r0, .L6
  99              	.L2:
 162:Core/Src/freertos.c ****         printf("Error on default allocators (line %d)\n", __LINE__);
 163:Core/Src/freertos.c ****     }
 164:Core/Src/freertos.c **** 
 165:Core/Src/freertos.c ****     // micro-ROS app
 166:Core/Src/freertos.c **** 
 167:Core/Src/freertos.c ****     rcl_publisher_t publisher;
 100              		.loc 1 167 5 is_stmt 1 view .LVU17
 168:Core/Src/freertos.c ****     std_msgs__msg__Int32 msg;
 101              		.loc 1 168 5 view .LVU18
 169:Core/Src/freertos.c ****     rclc_support_t support;
 102              		.loc 1 169 5 view .LVU19
 170:Core/Src/freertos.c ****     rcl_allocator_t allocator;
ARM GAS  /tmp/ccRPdVgG.s 			page 6


 103              		.loc 1 170 5 view .LVU20
 171:Core/Src/freertos.c ****     rcl_node_t node;
 104              		.loc 1 171 5 view .LVU21
 172:Core/Src/freertos.c **** 
 173:Core/Src/freertos.c ****     allocator = rcl_get_default_allocator();
 105              		.loc 1 173 5 view .LVU22
 106              		.loc 1 173 17 is_stmt 0 view .LVU23
 107 0036 02A8     		add	r0, sp, #8
 108 0038 FFF7FEFF 		bl	rcutils_get_default_allocator
 109              	.LVL5:
 110 003c 0DF12C0E 		add	lr, sp, #44
 111 0040 0DF1080C 		add	ip, sp, #8
 112 0044 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 113 0048 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 114 004c DCF80030 		ldr	r3, [ip]
 115 0050 CEF80030 		str	r3, [lr]
 174:Core/Src/freertos.c **** 
 175:Core/Src/freertos.c ****     //create init_options
 176:Core/Src/freertos.c ****     rclc_support_init(&support, 0, NULL, &allocator);
 116              		.loc 1 176 5 is_stmt 1 view .LVU24
 117 0054 0BAB     		add	r3, sp, #44
 118 0056 0022     		movs	r2, #0
 119 0058 1146     		mov	r1, r2
 120 005a 10A8     		add	r0, sp, #64
 121 005c FFF7FEFF 		bl	rclc_support_init
 122              	.LVL6:
 177:Core/Src/freertos.c **** 
 178:Core/Src/freertos.c ****     // create node
 179:Core/Src/freertos.c ****     rclc_node_init_default(&node, "cubemx_node", "", &support);
 123              		.loc 1 179 5 view .LVU25
 124 0060 10AB     		add	r3, sp, #64
 125 0062 1C4A     		ldr	r2, .L8+36
 126 0064 1C49     		ldr	r1, .L8+40
 127 0066 09A8     		add	r0, sp, #36
 128 0068 FFF7FEFF 		bl	rclc_node_init_default
 129              	.LVL7:
 180:Core/Src/freertos.c **** 
 181:Core/Src/freertos.c ****     // create publisher
 182:Core/Src/freertos.c ****     rclc_publisher_init_default(
 130              		.loc 1 182 5 view .LVU26
 131 006c FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 132              	.LVL8:
 133 0070 0246     		mov	r2, r0
 134 0072 1A4B     		ldr	r3, .L8+44
 135 0074 09A9     		add	r1, sp, #36
 136 0076 1EA8     		add	r0, sp, #120
 137 0078 FFF7FEFF 		bl	rclc_publisher_init_default
 138              	.LVL9:
 183:Core/Src/freertos.c ****       &publisher,
 184:Core/Src/freertos.c ****       &node,
 185:Core/Src/freertos.c ****       ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 186:Core/Src/freertos.c ****       "cubemx_publisher");
 187:Core/Src/freertos.c **** 
 188:Core/Src/freertos.c ****     msg.data = 0;
 139              		.loc 1 188 5 view .LVU27
 140              		.loc 1 188 14 is_stmt 0 view .LVU28
 141 007c 0023     		movs	r3, #0
ARM GAS  /tmp/ccRPdVgG.s 			page 7


 142 007e 1D93     		str	r3, [sp, #116]
 143 0080 0EE0     		b	.L4
 144              	.L6:
 162:Core/Src/freertos.c ****     }
 145              		.loc 1 162 9 is_stmt 1 view .LVU29
 146 0082 A221     		movs	r1, #162
 147 0084 1648     		ldr	r0, .L8+48
 148 0086 FFF7FEFF 		bl	printf
 149              	.LVL10:
 150 008a D4E7     		b	.L2
 151              	.LVL11:
 152              	.L7:
 153              	.LBB2:
 189:Core/Src/freertos.c **** 
 190:Core/Src/freertos.c ****     for(;;)
 191:Core/Src/freertos.c ****     {
 192:Core/Src/freertos.c ****       rcl_ret_t ret = rcl_publish(&publisher, &msg, NULL);
 193:Core/Src/freertos.c ****       if (ret != RCL_RET_OK)
 194:Core/Src/freertos.c ****       {
 195:Core/Src/freertos.c ****         printf("Error publishing (line %d)\n", __LINE__);
 154              		.loc 1 195 9 view .LVU30
 155 008c C321     		movs	r1, #195
 156 008e 1548     		ldr	r0, .L8+52
 157              	.LVL12:
 158              		.loc 1 195 9 is_stmt 0 view .LVU31
 159 0090 FFF7FEFF 		bl	printf
 160              	.LVL13:
 161              	.L3:
 196:Core/Src/freertos.c ****       }
 197:Core/Src/freertos.c **** 
 198:Core/Src/freertos.c ****       msg.data++;
 162              		.loc 1 198 7 is_stmt 1 view .LVU32
 163              		.loc 1 198 10 is_stmt 0 view .LVU33
 164 0094 1D9B     		ldr	r3, [sp, #116]
 165              		.loc 1 198 15 view .LVU34
 166 0096 0133     		adds	r3, r3, #1
 167 0098 1D93     		str	r3, [sp, #116]
 199:Core/Src/freertos.c ****       osDelay(10);
 168              		.loc 1 199 7 is_stmt 1 view .LVU35
 169 009a 0A20     		movs	r0, #10
 170 009c FFF7FEFF 		bl	osDelay
 171              	.LVL14:
 172              	.LBE2:
 190:Core/Src/freertos.c ****     {
 173              		.loc 1 190 10 view .LVU36
 174              	.L4:
 190:Core/Src/freertos.c ****     {
 175              		.loc 1 190 5 view .LVU37
 176              	.LBB3:
 192:Core/Src/freertos.c ****       if (ret != RCL_RET_OK)
 177              		.loc 1 192 7 view .LVU38
 192:Core/Src/freertos.c ****       if (ret != RCL_RET_OK)
 178              		.loc 1 192 23 is_stmt 0 view .LVU39
 179 00a0 0022     		movs	r2, #0
 180 00a2 1DA9     		add	r1, sp, #116
 181 00a4 1EA8     		add	r0, sp, #120
 182 00a6 FFF7FEFF 		bl	rcl_publish
ARM GAS  /tmp/ccRPdVgG.s 			page 8


 183              	.LVL15:
 193:Core/Src/freertos.c ****       {
 184              		.loc 1 193 7 is_stmt 1 view .LVU40
 193:Core/Src/freertos.c ****       {
 185              		.loc 1 193 10 is_stmt 0 view .LVU41
 186 00aa 0028     		cmp	r0, #0
 187 00ac EED1     		bne	.L7
 188 00ae F1E7     		b	.L3
 189              	.L9:
 190              		.align	2
 191              	.L8:
 192 00b0 00000000 		.word	cubemx_transport_read
 193 00b4 00000000 		.word	cubemx_transport_write
 194 00b8 00000000 		.word	cubemx_transport_close
 195 00bc 00000000 		.word	cubemx_transport_open
 196 00c0 00000000 		.word	huart3
 197 00c4 00000000 		.word	microros_allocate
 198 00c8 00000000 		.word	microros_deallocate
 199 00cc 00000000 		.word	microros_reallocate
 200 00d0 00000000 		.word	microros_zero_allocate
 201 00d4 28000000 		.word	.LC1
 202 00d8 2C000000 		.word	.LC2
 203 00dc 38000000 		.word	.LC3
 204 00e0 00000000 		.word	.LC0
 205 00e4 4C000000 		.word	.LC4
 206              	.LBE3:
 207              		.cfi_endproc
 208              	.LFE143:
 210              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 211              		.align	1
 212              		.global	MX_FREERTOS_Init
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	MX_FREERTOS_Init:
 219              	.LFB142:
  99:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 220              		.loc 1 99 29 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI2:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 122:Core/Src/freertos.c **** 
 229              		.loc 1 122 3 view .LVU43
 122:Core/Src/freertos.c **** 
 230              		.loc 1 122 23 is_stmt 0 view .LVU44
 231 0002 044A     		ldr	r2, .L12
 232 0004 0021     		movs	r1, #0
 233 0006 0448     		ldr	r0, .L12+4
 234 0008 FFF7FEFF 		bl	osThreadNew
 235              	.LVL16:
 122:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccRPdVgG.s 			page 9


 236              		.loc 1 122 21 view .LVU45
 237 000c 034B     		ldr	r3, .L12+8
 238 000e 1860     		str	r0, [r3]
 132:Core/Src/freertos.c **** 
 239              		.loc 1 132 1 view .LVU46
 240 0010 08BD     		pop	{r3, pc}
 241              	.L13:
 242 0012 00BF     		.align	2
 243              	.L12:
 244 0014 00000000 		.word	.LANCHOR0
 245 0018 00000000 		.word	StartDefaultTask
 246 001c 00000000 		.word	.LANCHOR1
 247              		.cfi_endproc
 248              	.LFE142:
 250              		.global	defaultTask_attributes
 251              		.section	.rodata.str1.4,"aMS",%progbits,1
 252              		.align	2
 253              	.LC5:
 254 0000 64656661 		.ascii	"defaultTask\000"
 254      756C7454 
 254      61736B00 
 255              		.global	defaultTaskControlBlock
 256              		.global	defaultTaskBuffer
 257              		.global	defaultTaskHandle
 258              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 259              		.align	2
 262              	defaultTaskBuffer:
 263 0000 00000000 		.space	12000
 263      00000000 
 263      00000000 
 263      00000000 
 263      00000000 
 264              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 265              		.align	2
 268              	defaultTaskControlBlock:
 269 0000 00000000 		.space	92
 269      00000000 
 269      00000000 
 269      00000000 
 269      00000000 
 270              		.section	.bss.defaultTaskHandle,"aw",%nobits
 271              		.align	2
 272              		.set	.LANCHOR1,. + 0
 275              	defaultTaskHandle:
 276 0000 00000000 		.space	4
 277              		.section	.rodata.defaultTask_attributes,"a"
 278              		.align	2
 279              		.set	.LANCHOR0,. + 0
 282              	defaultTask_attributes:
 283 0000 00000000 		.word	.LC5
 284 0004 00000000 		.space	4
 285 0008 00000000 		.word	defaultTaskControlBlock
 286 000c 5C000000 		.word	92
 287 0010 00000000 		.word	defaultTaskBuffer
 288 0014 E02E0000 		.word	12000
 289 0018 18000000 		.word	24
 290 001c 00000000 		.space	8
ARM GAS  /tmp/ccRPdVgG.s 			page 10


 290      00000000 
 291              		.text
 292              	.Letext0:
 293              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 294              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 295              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 296              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 297              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 298              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 299              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 300              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 301              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 302              		.file 11 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 303              		.file 12 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/all
 304              		.file 13 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/ret
 305              		.file 14 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 306              		.file 15 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/tim
 307              		.file 16 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 308              		.file 17 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/typ
 309              		.file 18 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/con
 310              		.file 19 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/nod
 311              		.file 20 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/tim
 312              		.file 21 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/pub
 313              		.file 22 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 314              		.file 23 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ty
 315              		.file 24 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl_act
 316              		.file 25 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 317              		.file 26 "Core/Inc/usart.h"
 318              		.file 27 "/usr/include/newlib/stdio.h"
 319              		.file 28 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw_mic
 320              		.file 29 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/in
 321              		.file 30 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/no
 322              		.file 31 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 323              		.file 32 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/pu
ARM GAS  /tmp/ccRPdVgG.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccRPdVgG.s:18     .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccRPdVgG.s:34     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccRPdVgG.s:42     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccRPdVgG.s:192    .text.StartDefaultTask:00000000000000b0 $d
     /tmp/ccRPdVgG.s:211    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccRPdVgG.s:218    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccRPdVgG.s:244    .text.MX_FREERTOS_Init:0000000000000014 $d
     /tmp/ccRPdVgG.s:282    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccRPdVgG.s:252    .rodata.str1.4:0000000000000000 $d
     /tmp/ccRPdVgG.s:268    .bss.defaultTaskControlBlock:0000000000000000 defaultTaskControlBlock
     /tmp/ccRPdVgG.s:262    .bss.defaultTaskBuffer:0000000000000000 defaultTaskBuffer
     /tmp/ccRPdVgG.s:275    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccRPdVgG.s:259    .bss.defaultTaskBuffer:0000000000000000 $d
     /tmp/ccRPdVgG.s:265    .bss.defaultTaskControlBlock:0000000000000000 $d
     /tmp/ccRPdVgG.s:271    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccRPdVgG.s:278    .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
rmw_uros_set_custom_transport
rcutils_get_zero_initialized_allocator
rcutils_set_default_allocator
rcutils_get_default_allocator
rclc_support_init
rclc_node_init_default
rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
rclc_publisher_init_default
printf
osDelay
rcl_publish
cubemx_transport_read
cubemx_transport_write
cubemx_transport_close
cubemx_transport_open
huart3
microros_allocate
microros_deallocate
microros_reallocate
microros_zero_allocate
osThreadNew
