ARM GAS  /tmp/ccm8xRyG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART3_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART3_UART_Init:
  27              	.LFB134:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart3;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_rx;
  29:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_tx;
  30:Core/Src/usart.c **** 
ARM GAS  /tmp/ccm8xRyG.s 			page 2


  31:Core/Src/usart.c **** /* USART3 init function */
  32:Core/Src/usart.c **** 
  33:Core/Src/usart.c **** void MX_USART3_UART_Init(void)
  34:Core/Src/usart.c **** {
  29              		.loc 1 34 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE END USART3_Init 0 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 1 */
  41:Core/Src/usart.c **** 
  42:Core/Src/usart.c ****   /* USER CODE END USART3_Init 1 */
  43:Core/Src/usart.c ****   huart3.Instance = USART3;
  38              		.loc 1 43 3 view .LVU1
  39              		.loc 1 43 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  44:Core/Src/usart.c ****   huart3.Init.BaudRate = 115200;
  43              		.loc 1 44 3 is_stmt 1 view .LVU3
  44              		.loc 1 44 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  45:Core/Src/usart.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 45 3 is_stmt 1 view .LVU5
  48              		.loc 1 45 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  46:Core/Src/usart.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 46 3 is_stmt 1 view .LVU7
  52              		.loc 1 46 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  47:Core/Src/usart.c ****   huart3.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 47 3 is_stmt 1 view .LVU9
  55              		.loc 1 47 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  48:Core/Src/usart.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 48 3 is_stmt 1 view .LVU11
  58              		.loc 1 48 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  49:Core/Src/usart.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 49 3 is_stmt 1 view .LVU13
  62              		.loc 1 49 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  50:Core/Src/usart.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 50 3 is_stmt 1 view .LVU15
  65              		.loc 1 50 28 is_stmt 0 view .LVU16
ARM GAS  /tmp/ccm8xRyG.s 			page 3


  66 001c C361     		str	r3, [r0, #28]
  51:Core/Src/usart.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
  67              		.loc 1 51 3 is_stmt 1 view .LVU17
  68              		.loc 1 51 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 51 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  52:Core/Src/usart.c ****   {
  53:Core/Src/usart.c ****     Error_Handler();
  54:Core/Src/usart.c ****   }
  55:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 2 */
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c ****   /* USER CODE END USART3_Init 2 */
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c **** }
  74              		.loc 1 59 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  53:Core/Src/usart.c ****   }
  77              		.loc 1 53 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 59 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	.LANCHOR0
  86 0030 00480040 		.word	1073760256
  87              		.cfi_endproc
  88              	.LFE134:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	HAL_UART_MspInit:
  99              	.LVL2:
 100              	.LFB135:
  60:Core/Src/usart.c **** 
  61:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  62:Core/Src/usart.c **** {
 101              		.loc 1 62 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		.loc 1 62 1 is_stmt 0 view .LVU24
 106 0000 30B5     		push	{r4, r5, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 5, -8
 111              		.cfi_offset 14, -4
ARM GAS  /tmp/ccm8xRyG.s 			page 4


 112 0002 89B0     		sub	sp, sp, #36
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 48
  63:Core/Src/usart.c **** 
  64:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 115              		.loc 1 64 3 is_stmt 1 view .LVU25
 116              		.loc 1 64 20 is_stmt 0 view .LVU26
 117 0004 0023     		movs	r3, #0
 118 0006 0393     		str	r3, [sp, #12]
 119 0008 0493     		str	r3, [sp, #16]
 120 000a 0593     		str	r3, [sp, #20]
 121 000c 0693     		str	r3, [sp, #24]
 122 000e 0793     		str	r3, [sp, #28]
  65:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 123              		.loc 1 65 3 is_stmt 1 view .LVU27
 124              		.loc 1 65 16 is_stmt 0 view .LVU28
 125 0010 0268     		ldr	r2, [r0]
 126              		.loc 1 65 5 view .LVU29
 127 0012 364B     		ldr	r3, .L15
 128 0014 9A42     		cmp	r2, r3
 129 0016 01D0     		beq	.L12
 130              	.LVL3:
 131              	.L7:
  66:Core/Src/usart.c ****   {
  67:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 0 */
  70:Core/Src/usart.c ****     /* USART3 clock enable */
  71:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_ENABLE();
  72:Core/Src/usart.c **** 
  73:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
  74:Core/Src/usart.c ****     /**USART3 GPIO Configuration
  75:Core/Src/usart.c ****     PD8     ------> USART3_TX
  76:Core/Src/usart.c ****     PD9     ------> USART3_RX
  77:Core/Src/usart.c ****     */
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  82:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
  83:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
  84:Core/Src/usart.c **** 
  85:Core/Src/usart.c ****     /* USART3 DMA Init */
  86:Core/Src/usart.c ****     /* USART3_RX Init */
  87:Core/Src/usart.c ****     hdma_usart3_rx.Instance = DMA1_Stream1;
  88:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
  89:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
  90:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
  91:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
  92:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  93:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  94:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
  96:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
  97:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
  98:Core/Src/usart.c ****     {
  99:Core/Src/usart.c ****       Error_Handler();
ARM GAS  /tmp/ccm8xRyG.s 			page 5


 100:Core/Src/usart.c ****     }
 101:Core/Src/usart.c **** 
 102:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart3_rx);
 103:Core/Src/usart.c **** 
 104:Core/Src/usart.c ****     /* USART3_TX Init */
 105:Core/Src/usart.c ****     hdma_usart3_tx.Instance = DMA1_Stream3;
 106:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 107:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 108:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 109:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 110:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 111:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 112:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 113:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 114:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 115:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 116:Core/Src/usart.c ****     {
 117:Core/Src/usart.c ****       Error_Handler();
 118:Core/Src/usart.c ****     }
 119:Core/Src/usart.c **** 
 120:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart3_tx);
 121:Core/Src/usart.c **** 
 122:Core/Src/usart.c ****     /* USART3 interrupt Init */
 123:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 124:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 125:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 126:Core/Src/usart.c **** 
 127:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 1 */
 128:Core/Src/usart.c ****   }
 129:Core/Src/usart.c **** }
 132              		.loc 1 129 1 view .LVU30
 133 0018 09B0     		add	sp, sp, #36
 134              	.LCFI3:
 135              		.cfi_remember_state
 136              		.cfi_def_cfa_offset 12
 137              		@ sp needed
 138 001a 30BD     		pop	{r4, r5, pc}
 139              	.LVL4:
 140              	.L12:
 141              	.LCFI4:
 142              		.cfi_restore_state
 143              		.loc 1 129 1 view .LVU31
 144 001c 0446     		mov	r4, r0
  71:Core/Src/usart.c **** 
 145              		.loc 1 71 5 is_stmt 1 view .LVU32
 146              	.LBB2:
  71:Core/Src/usart.c **** 
 147              		.loc 1 71 5 view .LVU33
 148 001e 0025     		movs	r5, #0
 149 0020 0195     		str	r5, [sp, #4]
  71:Core/Src/usart.c **** 
 150              		.loc 1 71 5 view .LVU34
 151 0022 03F5F833 		add	r3, r3, #126976
 152 0026 1A6C     		ldr	r2, [r3, #64]
 153 0028 42F48022 		orr	r2, r2, #262144
 154 002c 1A64     		str	r2, [r3, #64]
  71:Core/Src/usart.c **** 
ARM GAS  /tmp/ccm8xRyG.s 			page 6


 155              		.loc 1 71 5 view .LVU35
 156 002e 1A6C     		ldr	r2, [r3, #64]
 157 0030 02F48022 		and	r2, r2, #262144
 158 0034 0192     		str	r2, [sp, #4]
  71:Core/Src/usart.c **** 
 159              		.loc 1 71 5 view .LVU36
 160 0036 019A     		ldr	r2, [sp, #4]
 161              	.LBE2:
  71:Core/Src/usart.c **** 
 162              		.loc 1 71 5 view .LVU37
  73:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 163              		.loc 1 73 5 view .LVU38
 164              	.LBB3:
  73:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 165              		.loc 1 73 5 view .LVU39
 166 0038 0295     		str	r5, [sp, #8]
  73:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 167              		.loc 1 73 5 view .LVU40
 168 003a 1A6B     		ldr	r2, [r3, #48]
 169 003c 42F00802 		orr	r2, r2, #8
 170 0040 1A63     		str	r2, [r3, #48]
  73:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 171              		.loc 1 73 5 view .LVU41
 172 0042 1B6B     		ldr	r3, [r3, #48]
 173 0044 03F00803 		and	r3, r3, #8
 174 0048 0293     		str	r3, [sp, #8]
  73:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 175              		.loc 1 73 5 view .LVU42
 176 004a 029B     		ldr	r3, [sp, #8]
 177              	.LBE3:
  73:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 178              		.loc 1 73 5 view .LVU43
  78:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 179              		.loc 1 78 5 view .LVU44
  78:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 180              		.loc 1 78 25 is_stmt 0 view .LVU45
 181 004c 4FF44073 		mov	r3, #768
 182 0050 0393     		str	r3, [sp, #12]
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 183              		.loc 1 79 5 is_stmt 1 view .LVU46
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 184              		.loc 1 79 26 is_stmt 0 view .LVU47
 185 0052 0223     		movs	r3, #2
 186 0054 0493     		str	r3, [sp, #16]
  80:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 187              		.loc 1 80 5 is_stmt 1 view .LVU48
  81:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 188              		.loc 1 81 5 view .LVU49
  81:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 189              		.loc 1 81 27 is_stmt 0 view .LVU50
 190 0056 0323     		movs	r3, #3
 191 0058 0693     		str	r3, [sp, #24]
  82:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 192              		.loc 1 82 5 is_stmt 1 view .LVU51
  82:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 193              		.loc 1 82 31 is_stmt 0 view .LVU52
 194 005a 0723     		movs	r3, #7
ARM GAS  /tmp/ccm8xRyG.s 			page 7


 195 005c 0793     		str	r3, [sp, #28]
  83:Core/Src/usart.c **** 
 196              		.loc 1 83 5 is_stmt 1 view .LVU53
 197 005e 03A9     		add	r1, sp, #12
 198 0060 2348     		ldr	r0, .L15+4
 199              	.LVL5:
  83:Core/Src/usart.c **** 
 200              		.loc 1 83 5 is_stmt 0 view .LVU54
 201 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 202              	.LVL6:
  87:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 203              		.loc 1 87 5 is_stmt 1 view .LVU55
  87:Core/Src/usart.c ****     hdma_usart3_rx.Init.Channel = DMA_CHANNEL_4;
 204              		.loc 1 87 29 is_stmt 0 view .LVU56
 205 0066 2348     		ldr	r0, .L15+8
 206 0068 234B     		ldr	r3, .L15+12
 207 006a 0360     		str	r3, [r0]
  88:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 208              		.loc 1 88 5 is_stmt 1 view .LVU57
  88:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 209              		.loc 1 88 33 is_stmt 0 view .LVU58
 210 006c 4FF00063 		mov	r3, #134217728
 211 0070 4360     		str	r3, [r0, #4]
  89:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 212              		.loc 1 89 5 is_stmt 1 view .LVU59
  89:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 213              		.loc 1 89 35 is_stmt 0 view .LVU60
 214 0072 8560     		str	r5, [r0, #8]
  90:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 215              		.loc 1 90 5 is_stmt 1 view .LVU61
  90:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 216              		.loc 1 90 35 is_stmt 0 view .LVU62
 217 0074 C560     		str	r5, [r0, #12]
  91:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 218              		.loc 1 91 5 is_stmt 1 view .LVU63
  91:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 219              		.loc 1 91 32 is_stmt 0 view .LVU64
 220 0076 4FF48063 		mov	r3, #1024
 221 007a 0361     		str	r3, [r0, #16]
  92:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 222              		.loc 1 92 5 is_stmt 1 view .LVU65
  92:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 223              		.loc 1 92 45 is_stmt 0 view .LVU66
 224 007c 4561     		str	r5, [r0, #20]
  93:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 225              		.loc 1 93 5 is_stmt 1 view .LVU67
  93:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 226              		.loc 1 93 42 is_stmt 0 view .LVU68
 227 007e 8561     		str	r5, [r0, #24]
  94:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 228              		.loc 1 94 5 is_stmt 1 view .LVU69
  94:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 229              		.loc 1 94 30 is_stmt 0 view .LVU70
 230 0080 4FF48073 		mov	r3, #256
 231 0084 C361     		str	r3, [r0, #28]
  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 232              		.loc 1 95 5 is_stmt 1 view .LVU71
ARM GAS  /tmp/ccm8xRyG.s 			page 8


  95:Core/Src/usart.c ****     hdma_usart3_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 233              		.loc 1 95 34 is_stmt 0 view .LVU72
 234 0086 4FF44033 		mov	r3, #196608
 235 008a 0362     		str	r3, [r0, #32]
  96:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 236              		.loc 1 96 5 is_stmt 1 view .LVU73
  96:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 237              		.loc 1 96 34 is_stmt 0 view .LVU74
 238 008c 4562     		str	r5, [r0, #36]
  97:Core/Src/usart.c ****     {
 239              		.loc 1 97 5 is_stmt 1 view .LVU75
  97:Core/Src/usart.c ****     {
 240              		.loc 1 97 9 is_stmt 0 view .LVU76
 241 008e FFF7FEFF 		bl	HAL_DMA_Init
 242              	.LVL7:
  97:Core/Src/usart.c ****     {
 243              		.loc 1 97 8 view .LVU77
 244 0092 28BB     		cbnz	r0, .L13
 245              	.L9:
 102:Core/Src/usart.c **** 
 246              		.loc 1 102 5 is_stmt 1 view .LVU78
 102:Core/Src/usart.c **** 
 247              		.loc 1 102 5 view .LVU79
 248 0094 174B     		ldr	r3, .L15+8
 249 0096 E363     		str	r3, [r4, #60]
 102:Core/Src/usart.c **** 
 250              		.loc 1 102 5 view .LVU80
 251 0098 9C63     		str	r4, [r3, #56]
 102:Core/Src/usart.c **** 
 252              		.loc 1 102 5 view .LVU81
 105:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 253              		.loc 1 105 5 view .LVU82
 105:Core/Src/usart.c ****     hdma_usart3_tx.Init.Channel = DMA_CHANNEL_4;
 254              		.loc 1 105 29 is_stmt 0 view .LVU83
 255 009a 1848     		ldr	r0, .L15+16
 256 009c 184B     		ldr	r3, .L15+20
 257 009e 0360     		str	r3, [r0]
 106:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 258              		.loc 1 106 5 is_stmt 1 view .LVU84
 106:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 259              		.loc 1 106 33 is_stmt 0 view .LVU85
 260 00a0 4FF00063 		mov	r3, #134217728
 261 00a4 4360     		str	r3, [r0, #4]
 107:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 262              		.loc 1 107 5 is_stmt 1 view .LVU86
 107:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 263              		.loc 1 107 35 is_stmt 0 view .LVU87
 264 00a6 4023     		movs	r3, #64
 265 00a8 8360     		str	r3, [r0, #8]
 108:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 266              		.loc 1 108 5 is_stmt 1 view .LVU88
 108:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 267              		.loc 1 108 35 is_stmt 0 view .LVU89
 268 00aa 0023     		movs	r3, #0
 269 00ac C360     		str	r3, [r0, #12]
 109:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 270              		.loc 1 109 5 is_stmt 1 view .LVU90
ARM GAS  /tmp/ccm8xRyG.s 			page 9


 109:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 271              		.loc 1 109 32 is_stmt 0 view .LVU91
 272 00ae 4FF48062 		mov	r2, #1024
 273 00b2 0261     		str	r2, [r0, #16]
 110:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 274              		.loc 1 110 5 is_stmt 1 view .LVU92
 110:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 275              		.loc 1 110 45 is_stmt 0 view .LVU93
 276 00b4 4361     		str	r3, [r0, #20]
 111:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 277              		.loc 1 111 5 is_stmt 1 view .LVU94
 111:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 278              		.loc 1 111 42 is_stmt 0 view .LVU95
 279 00b6 8361     		str	r3, [r0, #24]
 112:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 280              		.loc 1 112 5 is_stmt 1 view .LVU96
 112:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 281              		.loc 1 112 30 is_stmt 0 view .LVU97
 282 00b8 C361     		str	r3, [r0, #28]
 113:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 283              		.loc 1 113 5 is_stmt 1 view .LVU98
 113:Core/Src/usart.c ****     hdma_usart3_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 284              		.loc 1 113 34 is_stmt 0 view .LVU99
 285 00ba 4FF44032 		mov	r2, #196608
 286 00be 0262     		str	r2, [r0, #32]
 114:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 287              		.loc 1 114 5 is_stmt 1 view .LVU100
 114:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 288              		.loc 1 114 34 is_stmt 0 view .LVU101
 289 00c0 4362     		str	r3, [r0, #36]
 115:Core/Src/usart.c ****     {
 290              		.loc 1 115 5 is_stmt 1 view .LVU102
 115:Core/Src/usart.c ****     {
 291              		.loc 1 115 9 is_stmt 0 view .LVU103
 292 00c2 FFF7FEFF 		bl	HAL_DMA_Init
 293              	.LVL8:
 115:Core/Src/usart.c ****     {
 294              		.loc 1 115 8 view .LVU104
 295 00c6 70B9     		cbnz	r0, .L14
 296              	.L10:
 120:Core/Src/usart.c **** 
 297              		.loc 1 120 5 is_stmt 1 view .LVU105
 120:Core/Src/usart.c **** 
 298              		.loc 1 120 5 view .LVU106
 299 00c8 0C4B     		ldr	r3, .L15+16
 300 00ca A363     		str	r3, [r4, #56]
 120:Core/Src/usart.c **** 
 301              		.loc 1 120 5 view .LVU107
 302 00cc 9C63     		str	r4, [r3, #56]
 120:Core/Src/usart.c **** 
 303              		.loc 1 120 5 view .LVU108
 123:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 304              		.loc 1 123 5 view .LVU109
 305 00ce 0022     		movs	r2, #0
 306 00d0 0521     		movs	r1, #5
 307 00d2 2720     		movs	r0, #39
 308 00d4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccm8xRyG.s 			page 10


 309              	.LVL9:
 124:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 310              		.loc 1 124 5 view .LVU110
 311 00d8 2720     		movs	r0, #39
 312 00da FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 313              	.LVL10:
 314              		.loc 1 129 1 is_stmt 0 view .LVU111
 315 00de 9BE7     		b	.L7
 316              	.L13:
  99:Core/Src/usart.c ****     }
 317              		.loc 1 99 7 is_stmt 1 view .LVU112
 318 00e0 FFF7FEFF 		bl	Error_Handler
 319              	.LVL11:
 320 00e4 D6E7     		b	.L9
 321              	.L14:
 117:Core/Src/usart.c ****     }
 322              		.loc 1 117 7 view .LVU113
 323 00e6 FFF7FEFF 		bl	Error_Handler
 324              	.LVL12:
 325 00ea EDE7     		b	.L10
 326              	.L16:
 327              		.align	2
 328              	.L15:
 329 00ec 00480040 		.word	1073760256
 330 00f0 000C0240 		.word	1073875968
 331 00f4 00000000 		.word	.LANCHOR1
 332 00f8 28600240 		.word	1073897512
 333 00fc 00000000 		.word	.LANCHOR2
 334 0100 58600240 		.word	1073897560
 335              		.cfi_endproc
 336              	.LFE135:
 338              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 339              		.align	1
 340              		.global	HAL_UART_MspDeInit
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	HAL_UART_MspDeInit:
 347              	.LVL13:
 348              	.LFB136:
 130:Core/Src/usart.c **** 
 131:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 132:Core/Src/usart.c **** {
 349              		.loc 1 132 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 133:Core/Src/usart.c **** 
 134:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 353              		.loc 1 134 3 view .LVU115
 354              		.loc 1 134 16 is_stmt 0 view .LVU116
 355 0000 0268     		ldr	r2, [r0]
 356              		.loc 1 134 5 view .LVU117
 357 0002 0D4B     		ldr	r3, .L24
 358 0004 9A42     		cmp	r2, r3
 359 0006 00D0     		beq	.L23
ARM GAS  /tmp/ccm8xRyG.s 			page 11


 360 0008 7047     		bx	lr
 361              	.L23:
 132:Core/Src/usart.c **** 
 362              		.loc 1 132 1 view .LVU118
 363 000a 10B5     		push	{r4, lr}
 364              	.LCFI5:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 4, -8
 367              		.cfi_offset 14, -4
 368 000c 0446     		mov	r4, r0
 135:Core/Src/usart.c ****   {
 136:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 137:Core/Src/usart.c **** 
 138:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 0 */
 139:Core/Src/usart.c ****     /* Peripheral clock disable */
 140:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 369              		.loc 1 140 5 is_stmt 1 view .LVU119
 370 000e 0B4A     		ldr	r2, .L24+4
 371 0010 136C     		ldr	r3, [r2, #64]
 372 0012 23F48023 		bic	r3, r3, #262144
 373 0016 1364     		str	r3, [r2, #64]
 141:Core/Src/usart.c **** 
 142:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 143:Core/Src/usart.c ****     PD8     ------> USART3_TX
 144:Core/Src/usart.c ****     PD9     ------> USART3_RX
 145:Core/Src/usart.c ****     */
 146:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOD, STLK_RX_Pin|STLK_TX_Pin);
 374              		.loc 1 146 5 view .LVU120
 375 0018 4FF44071 		mov	r1, #768
 376 001c 0848     		ldr	r0, .L24+8
 377              	.LVL14:
 378              		.loc 1 146 5 is_stmt 0 view .LVU121
 379 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 380              	.LVL15:
 147:Core/Src/usart.c **** 
 148:Core/Src/usart.c ****     /* USART3 DMA DeInit */
 149:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 381              		.loc 1 149 5 is_stmt 1 view .LVU122
 382 0022 E06B     		ldr	r0, [r4, #60]
 383 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 384              	.LVL16:
 150:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 385              		.loc 1 150 5 view .LVU123
 386 0028 A06B     		ldr	r0, [r4, #56]
 387 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 388              	.LVL17:
 151:Core/Src/usart.c **** 
 152:Core/Src/usart.c ****     /* USART3 interrupt Deinit */
 153:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 389              		.loc 1 153 5 view .LVU124
 390 002e 2720     		movs	r0, #39
 391 0030 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 392              	.LVL18:
 154:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 155:Core/Src/usart.c **** 
 156:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 1 */
 157:Core/Src/usart.c ****   }
ARM GAS  /tmp/ccm8xRyG.s 			page 12


 158:Core/Src/usart.c **** }
 393              		.loc 1 158 1 is_stmt 0 view .LVU125
 394 0034 10BD     		pop	{r4, pc}
 395              	.LVL19:
 396              	.L25:
 397              		.loc 1 158 1 view .LVU126
 398 0036 00BF     		.align	2
 399              	.L24:
 400 0038 00480040 		.word	1073760256
 401 003c 00380240 		.word	1073887232
 402 0040 000C0240 		.word	1073875968
 403              		.cfi_endproc
 404              	.LFE136:
 406              		.global	hdma_usart3_tx
 407              		.global	hdma_usart3_rx
 408              		.global	huart3
 409              		.section	.bss.hdma_usart3_rx,"aw",%nobits
 410              		.align	2
 411              		.set	.LANCHOR1,. + 0
 414              	hdma_usart3_rx:
 415 0000 00000000 		.space	96
 415      00000000 
 415      00000000 
 415      00000000 
 415      00000000 
 416              		.section	.bss.hdma_usart3_tx,"aw",%nobits
 417              		.align	2
 418              		.set	.LANCHOR2,. + 0
 421              	hdma_usart3_tx:
 422 0000 00000000 		.space	96
 422      00000000 
 422      00000000 
 422      00000000 
 422      00000000 
 423              		.section	.bss.huart3,"aw",%nobits
 424              		.align	2
 425              		.set	.LANCHOR0,. + 0
 428              	huart3:
 429 0000 00000000 		.space	72
 429      00000000 
 429      00000000 
 429      00000000 
 429      00000000 
 430              		.text
 431              	.Letext0:
 432              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 433              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 434              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 435              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 436              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 437              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 438              		.file 8 "Core/Inc/usart.h"
 439              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 440              		.file 10 "Core/Inc/main.h"
ARM GAS  /tmp/ccm8xRyG.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccm8xRyG.s:18     .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/ccm8xRyG.s:26     .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/ccm8xRyG.s:85     .text.MX_USART3_UART_Init:000000000000002c $d
     /tmp/ccm8xRyG.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccm8xRyG.s:98     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccm8xRyG.s:329    .text.HAL_UART_MspInit:00000000000000ec $d
     /tmp/ccm8xRyG.s:339    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccm8xRyG.s:346    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccm8xRyG.s:400    .text.HAL_UART_MspDeInit:0000000000000038 $d
     /tmp/ccm8xRyG.s:421    .bss.hdma_usart3_tx:0000000000000000 hdma_usart3_tx
     /tmp/ccm8xRyG.s:414    .bss.hdma_usart3_rx:0000000000000000 hdma_usart3_rx
     /tmp/ccm8xRyG.s:428    .bss.huart3:0000000000000000 huart3
     /tmp/ccm8xRyG.s:410    .bss.hdma_usart3_rx:0000000000000000 $d
     /tmp/ccm8xRyG.s:417    .bss.hdma_usart3_tx:0000000000000000 $d
     /tmp/ccm8xRyG.s:424    .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
